@model EducationalPortal.Application.DTO.CourseDTO

@{
    ViewData["Title"] = "Create Course";
}

<h1>Create Course</h1>

<div class="row">
    <div class="col-md-4">
        <form method="post" asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group mb-2"> 
                <label asp-for="Name" class="control-label"></label> 
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span> 
            </div>
            <div class="d-flex mb-2">
                @*<img style="height:75px;" src="@Model.Thumbnail"/>*@
                <div class="">
                    <label asp-for="Thumbnail" class="control-label"></label>
                    <input asp-for="Thumbnail" class="form-control" type="file">
                </div>
            </div>
            <div class="form-group mb-2"> 
                <label asp-for="ShortDescription" class="control-label"></label> 
                <textarea asp-for="ShortDescription" class="form-control" rows="2"></textarea>
                <span asp-validation-for="ShortDescription" class="text-danger"></span> 
            </div>
            <div class="form-group mb-2"> 
                <label asp-for="Description" class="control-label"></label> 
                <textarea asp-for="Description" class="form-control" rows="5"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group mb-2"> 
                <label asp-for="Price" class="control-label"></label> 
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <input type="submit" value="Create" class="btn btn-primary my-2"/>
        </form>
            <div class="form-group mb-2">
                <h6>Skills:</h6>
                <form id="Skills"></form>
                <input type="button" value="Add Skills" class="btn btn-primary" onclick="LoadAddSkills()"/>
            </div>
            <div class="form-group mb-2">
                <h6>Materials:</h6>
                <form id="materials"></form>
                <input type="button" value="Add Videos" class="btn btn-primary" onclick="LoadAddVideos()"/>
            </div>
    </div>
    <div class="col-md-8" id="addPanel"></div>
</div>

<script>
    function LoadAddSkills(){
        ChangePage(1, 'Skills')
    }

    function LoadAddVideos(){
        ChangeMaterialsPage(1, 'Videos')
    }

    function ChangePage(pageNumber, url){
        var list = $(`#${url}`).serialize();
        $.ajax({  
            type: "GET",  
            url: `/${url}/Index`,
            data: list + '&PageNumber=' + pageNumber,
            success: function(data){
                $("#addPanel").html(data);
            }
        });
    }

    function ChangeMaterialsPage(pageNumber, url){
        var list = $(`#materials`).serialize();
        $.ajax({  
            type: "GET",  
            url: `/${url}/Index`,
            data: list + '&PageNumber=' + pageNumber,
            success: function(data){
                $("#addPanel").html(data);
            }
        });
    }

    function Create(url, pageNumber){
        var model = $(`#create${url}`).serialize();
        $.ajax({  
            type: "POST",  
            url: `/${url}/Create`,
            data: model,
            success: function(data){
                if(data.success){
                    ChangePage(pageNumber, url);
                }
                else{
                    $(`#create${url}`).html(data);
                }
            }
        });
    }

    function Add(id, url){
        var list = $(`#${url}`).serialize();
        $.ajax({  
            type: "POST",  
            url: `/${url}/Add`,
            data: list + `&id${url}=` + id,
            success: function(data){
                $(`#${url}`).html(data);
                document.getElementById(`${url}${id}`).setAttribute( "onClick", `Remove(${id}, '${url}');` );
            }
        });
    }

    function AddMaterial(id, url){
        var list = $(`#materials`).serialize();
        $.ajax({  
            type: "POST",  
            url: `/${url}/Add`,
            data: list + `&id${url}=` + id,
            success: function(data){
                $(`#materials`).html(data);
                document.getElementById(`${url}${id}`).setAttribute( "onClick", `RemoveMaterial(${id}, '${url}');` );
            }
        });
    }

    function Remove(id, url){
        var list = $(`#${url}`).serialize();
        $.ajax({  
            type: "POST",  
            url: `/${url}/Remove`,
            data: list + `&id${url}=` + id,
            success: function(data){
                $(`#${url}`).html(data);
                document.getElementById(`${url}${id}`).setAttribute( "onClick", `Add(${id}, '${url}');` );
            }
        });
    }

    function RemoveMaterial(id, url){
        var list = $(`#materials`).serialize();
        $.ajax({  
            type: "POST",  
            url: `/${url}/Remove`,
            data: list + `&id${url}=` + id,
            success: function(data){
                $(`#materials`).html(data);
                document.getElementById(`${url}${id}`).setAttribute( "onClick", `AddMaterial(${id}, '${url}');` );
            }
        });
    }

    function Delete(id, url, pageNumber){
        $.ajax({  
            type: "POST",  
            url: `/${url}/Delete/`,
            data: `&id${url}=` + id,
            success: function(data){
                if(data.success){
                    ChangePage(pageNumber, url);
                    Remove(id, url);
                } else {
                    alert(data.message);
                }
            }
        });
    }

    function DeleteMaterial(id, url, pageNumber){
        $.ajax({  
            type: "POST",  
            url: `/${url}/Delete/`,
            data: `&id${url}=` + id,
            success: function(data){
                if(data.success){
                    ChangeMaterialsPage(pageNumber, url);
                    RemoveMaterial(id, url);
                } else {
                    alert(data.message);
                }
            }
        });
    }

    const getVideoDuration = (file) =>
      new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.onload = () => {
          const media = new Audio(reader.result);
          media.onloadedmetadata = () => resolve(media.duration);
        };
        reader.readAsDataURL(file);
        reader.onerror = (error) => reject(error);
      });

    const handleChange = async (e) => {
      const duration = await getVideoDuration(e.target.files[0]);
      document.getElementById("Duration").value = parseInt(duration);
    };
</script>